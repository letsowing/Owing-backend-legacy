server:
  port: ${SPRING_SERVER_PORT}

springdoc:
  api-docs:
    path: ${SPRING_DOCS_PATH}
  packageToScan: Owing

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
      directory:
        project: ${DIRECTORY_PROJECT}
        casting: ${DIRECTORY_CASTING}
        universe: ${DIRECTORY_UNIVERSE}
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}

spring:
  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/owing
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

  neo4j:
    uri: bolt://${NEO4J_HOST}:${NEO4J_PORT}
    authentication:
      username: ${NEO4J_USERNAME}
      password: ${NEO4J_PASSWORD}

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    timeout: 5000

  application:
    name: spring-ai

  ai:
    openai:
      api-key: ${OPENAI_APIKEY}
      chat:
        options:
          model: ${OPENAI_MODEL}

